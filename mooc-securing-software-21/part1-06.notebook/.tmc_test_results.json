[{"name": "test.test_notes.NoteTest.test_adding", "status": "failed", "message": "1 != 0 : 1. note after 11. addition is present: Response should not contain 'SIgyNPrwiH'", "passed": false, "points": ["1.6.1", "1.6.2", "1.6.3", "1.6.4", "1.6.5"], "backtrace": ["  File \"C:\\Users\\Alii_\\miniconda3\\lib\\unittest\\case.py\", line 60, in testPartExecutor\n    yield\n", "  File \"C:\\Users\\Alii_\\miniconda3\\lib\\unittest\\case.py\", line 676, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Users\\Alii_\\miniconda3\\lib\\unittest\\case.py\", line 633, in _callTestMethod\n    method()\n", "  File \"C:\\Users\\Alii_\\Desktop\\MOOC\\mooc-securing-software-21\\part1-06.notebook\\test\\test_notes.py\", line 33, in test_adding\n    self.assertNotContains(response, items[j], msg_prefix='%d. note after %d. addition is present' % (j + 1, i + 1))\n", "  File \"C:\\Users\\Alii_\\miniconda3\\lib\\site-packages\\django\\test\\testcases.py\", line 482, in assertNotContains\n    self.assertEqual(real_count, 0, msg_prefix + \"Response should not contain %s\" % text_repr)\n", "  File \"C:\\Users\\Alii_\\miniconda3\\lib\\unittest\\case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"C:\\Users\\Alii_\\miniconda3\\lib\\unittest\\case.py\", line 905, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}]